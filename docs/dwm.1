.TH DWM 1 dwm\-VERSION

.SH NAME
dwm \- dynamic window manager

.SH SYNOPSIS
.B dwm
.RB [ \-v ] [ -s \ STATUS ]

.SH DESCRIPTION
dwm is a dynamic window manager for X. It manages windows in tiled, monocle
and floating layouts. Either layout can be applied dynamically, optimising the
environment for the application in use and the task performed.
.P
In tiled layouts windows are managed in a master and stacking area. The master
area on the left contains one window by default, and the stacking area on the
right contains all other windows. The number of master area windows can be
adjusted from zero to an arbitrary number. In monocle layout all windows are
maximised to the screen size. In floating layout windows can be resized and
moved freely. Dialog windows are always managed floating, regardless of the
layout applied.
.P
Windows are grouped by tags. Each window can be tagged with one or multiple
tags. Selecting certain tags displays all windows with these tags.
.P
Each screen contains a small status bar which displays all available tags, the
layout, the title of the focused window, and the text read from the root window
name property, if the screen is focused. A floating window is indicated with an
empty square and a maximised floating window is indicated with a filled square
before the windows title.  The selected tags are indicated with a different
color. The tags of the focused window are indicated with a filled square in the
top left corner.  The tags which are applied to one or more windows are
indicated with an empty square in the top left corner.
.P
dwm draws a small border around windows to indicate the focus state.
.P
On start, dwm can start additional programs that may be specified in two special
shell scripts (see the FILES section below), autostart_blocking.sh and
autostart.sh.  The former is executed first and dwm will wait for its
termination before starting.  The latter is executed in the background before
dwm enters its handler loop.
.P
Either of these files may be omitted.

.SH OPTIONS

.TP
.B \-v
prints version information to stderr, then exits.

.TP
.B \-s STATUS
set the status message to STATUS. It supports command output and doesn't require restarting dwm(1).


.SH USAGE

.SS Environment variables

.TP
.B $TERMINAL
specify a terminal emulator here. It is required and dwm(1) won't start without it.

.SS Keyboard commands

.TP
.B Mod4 + F1
Spawn
.BR $TERMINAL
and open man pages for
.BR dmenu(1).

.TP
.B Mod4 + Return
Spawn
.BR $TERMINAL.
If not set, you should have it set to your favourite terminal emulator.

.TP
.B Mod4 + r
Spawn
.BR dmenu(1),
for launching other programs.

.TP
.B Mod4 + Shift + b
Toggles bar on and off.

.TP
.B Mod4 + ,
Focus previous screen, if any.

.TP
.B Mod4 + .
Focus next screen, if any.

.TP
.B Mod4 + Shift + ,
Send focused window to previous screen, if any.

.TP
.B Mod4 + Shift + .
Send focused window to next screen, if any.

.TP
.B Mod4 + t
Sets tiled layout.

.TP
.B Mod4 + f
Sets floating layout.

.TP
.B Mod4 + m
Sets monocle layout.

.TP
.B Mod4 + space
Toggles between current and previous layout.

.TP
.B Mod4 + j
Focus next window.

.TP
.B Mod4 + k
Focus previous window.

.TP
.B Mod4 + n
View next tag.

.TP
.B Mod4 + b
View previous tag.

.TP
.B Mod4 + Shift + k
Move focused window next in stack.

.TP
.B Mod4 + Shift + j
Move focused window back in stack.

.TP
.B Mod4 + i
Increase number of windows in master area.

.TP
.B Mod4 + d
Decrease number of windows in master area.

.TP
.B Mod4 + l
Increase master area size.

.TP
.B Mod4 + h
Decrease master area size.

.TP
.B Mod4 + q
Close focused window.

.TP
.B Mod4 + Shift + enter
Focused window moves to master.

.TP
.B Mod4 + Shift + f
Fullscreen focused window.

.TP
.B Mod4 + Shift + space
Set focused window on top of every other.

.TP
.B Mod4 + Tab
Toggles to the previously selected tags.

.TP
.B Mod4 + Control + Shift + f
Toggle floating state for focused window

.TP
.B Mod4 + Shift + [0..n]
Move focused window to nth tag.

.TP
.B Mod4 + Control + Shift + [0..n]
Adds/removes focused window to nth tag.

.TP
.B Mod4 + [0..n]
View all windows with nth tag.

.TP
.B Mod4 + Control + [0..n]
show/hide all windows on current and nth tag.

.TP
.B Mod4 + [ARROW KEY]
Move focused tiled window in the arrow's direction.

.TP
.B Mod4 + Shift + [ARROW KEY]
Resize focused tiled window in the arrow's direction.

.TP
.B Mod4 + Control + [ARROW KEY]
Move focused tiled window in the corner of arrow's direction.

.TP
.B Mod4 + Control + Shift + [ARROW KEY]
Resize focused tiled window in the corner of arrow's direction.

.TP
.B Mod4 + Shift + q
Kill dwm.


.SS Mouse commands

.TP
.B Mod4 + Button1
Move focused window while dragging. Tiled windows will be toggled to the
floating state.

.TP
.B Mod4 + Button2
Toggles focused window between floating and tiled state.

.TP
.B Mod4 + Button3
Resize focused window while dragging. Tiled windows will be toggled to
the floating state.

.TP
.B Button3
Spawn
.BR jgmenu(1),
if installed.

.TP
.B Button4
View previous tag.

.TP
.B Button5
View next tag.

.SS Status bar

.TP
.B X root window name
is read and displayed in the status text area. It can be set with the
.BR xsetroot (1)
command.

.TP
.B Button1
shows all windows on clicked tag.

.TP
.B Button3
show/hide all windows on current and clicked tag. Spawns **jgmenu**(1), if installed, by clicking anywhere else.

.TP
.B Mod4 + Button1
moves focused window on clicked tag.

.TP
.B Mod4 + Button3
adds/removes focused window on clicked tag.

.SH FILES
The files containing programs to be started along with dwm are searched for in
the following directories:

.IP "1. $XDG_DATA_HOME/dwm"
.IP "2. $HOME/.local/share/dwm"
.IP "3. $HOME/.dwm"

.P
The first existing directory is scanned for any of the autostart files below:

.TP 15
.BR autostart.sh
This file is started as a shell background process before dwm enters its handler
loop.

.TP 15
.BR autostart_blocking.sh
This file is started before any autostart.sh; dwm waits for its termination.

.SH CUSTOMIZATION
dwm is customized by creating a custom config.h and (re)compiling the source
code. This keeps it fast, secure and simple.

.SH SEE ALSO
.BR dmenu (1),
.BR jgmenu (1)

.SH ISSUES
Java applications which use the XToolkit/XAWT backend may draw grey windows
only. The XToolkit/XAWT backend breaks ICCCM-compliance in recent JDK 1.5 and early
JDK 1.6 versions, because it assumes a reparenting window manager. Possible workarounds
are using JDK 1.4 (which doesn't contain the XToolkit/XAWT backend) or setting the
environment variable
.BR AWT_TOOLKIT=MToolkit
(to use the older Motif backend instead) or running
.B xprop -root -f _NET_WM_NAME 32a -set _NET_WM_NAME LG3D
or
.B wmname LG3D
(to pretend that a non-reparenting window manager is running that the
XToolkit/XAWT backend can recognize) or when using OpenJDK setting the environment variable
.BR _JAVA_AWT_WM_NONREPARENTING=1 .

.SH BUGS
Send all bug reports with a patch to hackers@suckless.org.
